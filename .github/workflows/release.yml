name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

defaults:
  run:
    shell: bash

jobs:
  release-build:
    runs-on: ubuntu-20.04
    env:
      # TODO
      RTE_CONTAINER_IMAGE: quay.io/k8stopologyawarewg/resource-topology-exporter:ci
    steps:
    - name: checkout sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: setup golang
      uses: actions/setup-go@v2
      id: go
      with:
        go-version: 1.16

    - name: verify modules
      run: go mod verify

    - name: set release version env var
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: build test binary
      run: |
        make build-e2e

    - name: build image
      run: |
        RTE_CONTAINER_IMAGE=${RTE_CONTAINER_IMAGE} RUNTIME=docker make image

    - name: generate manifests
      run: |
        make outdir
        RTE_CONTAINER_IMAGE=${RTE_CONTAINER_IMAGE} RTE_POLL_INTERVAL=10s make gen-manifests | tee _out/resource-topology-exporter.yaml

    - name: create K8S kind cluster
      run: |
        # kind is part of 20.04 image, see: https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
        kind create cluster --config=hack/kind-config-e2e.yaml --image kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
        kind load docker-image ${RTE_CONTAINER_IMAGE}

    - name: deploy RTE
      run: |
        # TODO: what about the other workers (if any)?
        kubectl label node kind-worker node-role.kubernetes.io/worker=''
        kubectl create -f _out/resource-topology-exporter.yaml

    - name: cluster info
      run: |
        kubectl get nodes
        kubectl get pods -A
        kubectl describe pod -l name=resource-topology || :
        kubectl logs -l name=resource-topology -c resource-topology-exporter-container || :

    - name: cluster ready
      run: |
        hack/check-ds.sh
        kubectl logs -l name=resource-topology -c resource-topology-exporter-container || :
        kubectl get noderesourcetopologies.topology.node.k8s.io -A -o yaml

    - name: run E2E tests
      run: |
        export KUBECONFIG=${HOME}/.kube/config 
        _out/rte-e2e.test -ginkgo.focus='\[(RTE|TopologyUpdater)\].*\[InfraConsuming\]'

    - name: fix build artifacts
      run: |
        mv _out/resource-topology-exporter.yaml resource-topology-exporter-${{ env.RELEASE_VERSION }}.yaml
        mv _out/resource-topology-exporter resource-topology-exporter-${{ env.RELEASE_VERSION }}-linux-amd64
        make clean outdir
        mv resource-topology-exporter-${{ env.RELEASE_VERSION}}* _out/

    - name: compute signature
      run: |
        pushd _out && sha256sum * >> ../SHA256SUMS && mv ../SHA256SUMS . && popd

    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: _out/*

    - name: export kind logs
      if: ${{ failure() }}
      run: |
        kind export logs /tmp/kind-logs

    - name: archive kind logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: kind-logs
        path: /tmp/kind-logs

  release:
    needs: [release-build]
    runs-on: ubuntu-20.04
    steps:
    - name: checkout sources
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # todo: create changelog and/or release body

    - name: download again the build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - name: create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "SHA256SUMS,resource-topology-exporter-v*.yaml,resource-topology-exporter-v*-linux-amd64"
        token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
