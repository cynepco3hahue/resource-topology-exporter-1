apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rte-handler
rules:
- apiGroups: ["topology.node.k8s.io"]
  resources: ["noderesourcetopologies"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","list","watch","update"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: handle-rte
subjects:
- kind: ServiceAccount
  name: rte-account
  namespace: default
roleRef:
  kind: ClusterRole
  name: rte-handler
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rte-account
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: resource-topology-exporter-ds
spec:
  selector:
      matchLabels:
        name: resource-topology
  template:
    metadata:
      labels:
        name: resource-topology
    spec:
      hostNetwork: true
      serviceAccountName: rte-account
      containers:
      - name: resource-topology-exporter-container
        image: quay.io/swsehgal/resource-topology-exporter:latest
        command:
        - /bin/resource-topology-exporter
        - --export-namespace=default
        - --sysfs=/host/
        - --kubelet-config-file=/host-var/lib/kubelet/config.yaml
        - --podresources-socket=/host-var/lib/kubelet/pod-resources/kubelet.sock
        volumeMounts:
          - name: host-sys
            mountPath: "/host/sys"
          - name: host-conf
            mountPath: "/host-var/lib/kubelet/config.yaml"
          - name: host-podresources
            mountPath: "/host-var/lib/kubelet/pod-resources"
      volumes:
      - name: host-sys
        hostPath:
          path: "/sys"
      - name: host-conf
        hostPath:
          path: "/var/lib/kubelet/config.yaml"
      - name: host-podresources
        hostPath:
          path: "/var/lib/kubelet/pod-resources"
